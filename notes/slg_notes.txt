test-1: 111100000030200, 486,17
test-2: 111100000030800
test-3: 111100000030801
test-4: 111100000030802

新手引导我按全部我来做来估算时间吧，因为大陈什么时候能做战斗引导是不确定的，小陈暂时也不能考虑在内。
动画部分都是美术做好了，我这边只负责播放，6 条动画大概 0.5 天。
语音播放前面说了是 2 天。
目前做的点击引导 1.5 天。
战斗引导需要干涉战斗逻辑，这一部分对战斗的修改约 2 天。实现引导粗略估 1 天。
动画部分按乐观估计的话，总计 7 天。没有什么大坑的话，到下周三（9.11）能完成。

crystal 外围，pillar 中心
bunker 外围，fort 中心

新手引导思路：
# 全部在前端解决，服务器端只存一个进度值
# 新手引导代码与所有其它 UI 代码拆解开来

text_data_ 系列是策划使用的
text_msg_ 系列是开发使用的
数据表出错先看 250 中数据表。

地图、据点相关原型表让策划填写
BUG：每次启动服务器，game.progress 值是 1 不论原本是多少

时间填在 value 里（天数），threshold 填 0
服务器进度事件，某些事件没有目标了，因为它只有时间约束
每一种条件类型（包括事件目标条件，还有军团发奖条件）的两个值（门槛值、目标值）需要一一明确。

殖民地上缴的资源转换成军团经验
所有协议返回错误信息的字符串的多语言处理

大地图逻辑实现（大地图据点相关 2d + 事件相关 1d）：3d
地块放弃逻辑 + 迁城逻辑 + 事件生成相关 + 要塞改进：2d
领地管理与导航：1d
服务器进度功能：1d
军团战报、殖民逻辑：1d
地块详情：2d

预估共 9 天

insert into map2cover(map_id, cover_type, owner_id, peace_time) select map_id + 10, 3, owner_id, peace_time from map2cover where owner_id = 1000100000021201 and cover_type = 3;

set @temp_player_id = 111100000030800;
insert into map2cover(map_id, cover_type, owner_id, peace_time) select map_id, 3, @temp_player_id, 0 from map_collect where player_id = @temp_player_id;
insert into player2resource_domain(map_id, player_id, durability) select map_id, @temp_player_id, 10 from map_collect where player_id = @temp_player_id;
delete from map_collect where player_id = @temp_player_id;

两个 api：
1. 判断地块是否属于我
2. 判断地块是否与我的地块相邻
军团地牢干掉。

- csharp 类导入到 lua 需修改 CustomSettings.cs
- 打包准备：
  - jdk, android-sdk, android-ndk
  - file -> build settings -> select android -> switch platform (bottom-left corner)
  - 打包工具 -> 检查版本号、资源版本号 -> 
    - 打安卓包之前配置切换到 develop select server -> 生成版本配置 -> build bundle
    - 电脑运行之前配置切换到 develop -> 生成版本配置 -> build bundle
  - 禁用热更 HotEngine.cs CheckHotUpdateAsync 470行的 EnterGame() 保留，其余内容全部删除
- unity3d 中材质能够被 Get/SetPixel 的前提：
  - Enabled read write
  - format is RGBA 32
- SLG 缩略地图渲染的大概过程：
  - client
    - init: backup origin texture, the backup will not change in runtime
    - update: use server response to make masks, then merge backup and masks into the minimap texture
  - server
    - init:
      - read alliance info (beacon, stronghold, flag)
      - create an array with size width x height
      - use alliance info to initialize the array
    - update:
      - while flag, beacon or stronghold is changed (owner change, destroy)
    - response, directly return the array
- SLG 缩略地图 TODO：
  - client 方面检查 init、update 的性能损耗
- SLG 覆盖物播撒：
  - 添加了蛋糕层，为播撒成功修改了播撒算法，可能得把算法改回来
  - 蛋糕层面积较大，得预先载入到地图中，
  - 对大地图体验的改进，预加载是非常重要的一个选项
  - 让整个大地图像一个临时实现的一个主要原因是每次拖动地图都有覆盖物在视野里延迟出现，预加载主要目标是消除这个延迟
  - 如果要考虑内存占用和性能影响，可以将视野外的覆盖物销毁，但是在镜头进入某一区块之前，一定要保证该区块已经加载过的物体要先于镜头出现，保证体验的连贯性
- unity3d 中创建图片的方式
  function Start () {
     // Create a new 2x2 texture ARGB32 (32 bit with alpha) and no mipmaps
     var texture = new Texture2D(2, 2, TextureFormat.ARGB32, false);

     // set the pixel values
     texture.SetPixel(0, 0, Color(1.0, 1.0, 1.0, 0.5));
     texture.SetPixel(1, 0, Color.clear);
     texture.SetPixel(0, 1, Color.white);
     texture.SetPixel(1, 1, Color.black);

     // Apply all SetPixel calls
     texture.Apply();

     // connect texture to material of GameObject this script is attached to
     renderer.material.mainTexture = texture;
  }
- MiniMap.cs code cache
    #region test texture stuff
    Renderer renderer = m_bgRoot.gameObject.GetComponent<Renderer>();
    RGLog.Log(renderer.material.mainTexture + "<<<<<<<<<< +++++++++ =======");
    Texture2D t = (Texture2D) renderer.material.mainTexture;
    int width = t.width;
    int height = t.height;
    long ts = System.DateTime.Now.Ticks;
    //TextureFormat.RGBA32
    for (int i = width / 4; i < width / 4 + 500; i++)
    {
        for (int j = height / 4; j < height / 4 + 500; j++)
        {
            t.SetPixel(i, j, Color.red * t.GetPixel(i, j));
        }
    }
    t.Apply();
    RGLog.Log(">>>>>>> " + width + ", " + height + ", ts: " + ((System.DateTime.Now.Ticks - ts) / System.TimeSpan.TicksPerMillisecond));
    #endregion

# 地图每个大格占了 100x100 = 10000 个小格，描述异色块的形式: 逐行
# 每个高低地形与其余装饰物一致描述，所不同的是：其余装饰物是实心，因此 prefab 中心可以放在几何中心（几何中心落在范围内）；高低地形是空心，prefab 中心须放在边沿区域

cs 源码中覆盖物类型在 HexGrid
generate_complex_prototype
generate_building_prototype
generate_greatmine_prototype

目标：
# 完成一次完整服务端部署
即以 Assets\LuaFramework\Scripts\Manager\GameManager.cs GetConfig 为起点，所有的依赖服务端的请求，对应的提供支持的服务器的部署
## 第一步是在本机配置好环境，使开发机可脱离内网环境运行，缺失知识：
##* 数据库部署
##** 从 0 开始怎么部，数据依赖 & SQL 脚本依赖
##* 登陆服务器
##** http://192.168.1.253/platform/
##** http://192.168.1.250:8080/
##** http://192.168.1.250:8888/
##* 热更服务器
##** http://192.168.1.253/platform/
##* 资源服务器
##** http://192.168.1.253/platform/
##* 配置服务器
##** http://192.168.1.253/platform/
##** http://192.168.1.250:8080/
##* 其它所有相关服务器
##** http://192.168.1.47:8080/rhea-collect/exception/collect,
##** http://192.168.1.47:8080/rhea-collect/ping/collect,

服务器部署文档（docker 版本）：
http://192.168.1.253:8899/pages/viewpage.action?pageId=7146460
服务器部署目录说明
http://192.168.1.253:8899/pages/viewpage.action?pageId=6684742

目前已涉及数据库：
* game
* center
* gm
* pay 由于本地无法调起支付因此未创建

客户端机器人
# 辅助人工
# 压力测试

服务器在开发本地搭建过程中奇怪无理的坑：
* 某些 eclipse 工程通过 Add library -> Server runtime 的方式添加的 Build path 可能导致 war 包不能正常工作，唯有直接添加 external jar 方能工作

=======
运行中心服务器

=======
瑞亚策略游戏开发相关
ssh: root@192.168.1.250 9ol.=[;. 日志目录：/usr/docker/game/game_logs，启动/停止脚本：/usr/docker/game/
ftp: 192.168.1.253 传输方式为主动 share:无密码
http://192.168.1.253:8899 wiki
http://192.168.1.253:8888 jira qixiaofeng
http://192.168.1.250:8000/account/login deploy developer:developer
http://192.168.1.253:8877/nexus/ admin:admin123
https://192.168.1.253/svn/project/wastland_survivor
https://192.168.1.253/svn/project/wastland_survivor/client
192.168.1.250:3306 developer:Rhea2017.com 内网数据库
电脑端 wasteland wars 解压后，luaframework 要拷贝到 C 盘根目录
redis.index 用 4
最后一个可运行的 game server 的 svn revision 是 23366

=======
Netty is an asynchronous event-driven network application framework  for rapid development of maintainable high performance protocol servers & clients.
The Spring Framework is a Java platform that provides comprehensive infrastructure support for developing Java applications. Spring handles the infrastructure so you can focus on your application.
MyBatis is a first class persistence framework with support for custom SQL, stored procedures and advanced mappings.

======= lua template =======
--[[
@Author: qixiaofeng
@Name: 军官技能科技页面
]]

--[[
@Section: Exports
]]
UIOfficerSkillTech = fgui.window_class(UI_Base)
OfficerSkillTech = {
  is_show_ui = false,
}

--[[
@Section: Locals
]]
local this = OfficerSkillTech
local util = DungeonUtil
local comps = {}
local comps_config = {}

--[[
@Section: fgui
]]
function UIOfficerSkillTech:ctor()
end

function UIOfficerSkillTech:OnInit()
end

function UIOfficerSkillTech:OnShown()
	UIManager.LoadUIPackage(UINewNames.UIOfficerSkillTech, function()
		local panel = UIPackage.CreateObject('units_management', 'tech_for_skill').asCom
    UIOfficerSkillTech.contentPane = panel
    this.initialize_data()
    this.bind_components(panel)
    this.initialize_comps()
	end, 'UI/units_management/units_management')
end

function UIOfficerSkillTech:OnHide()
	this.is_show_ui = false
end

--[[
@Section: Data
]]
local ReceivedData = {}
local SkillTech = {}

function ReceivedData:New()
	local o ={}
	setmetatable(o, self)
	self.__index = self
	return o
end

function ReceivedData:ReadFrom(msg)
  -- TODO
end

function ReceivedData:UpdateToUI()
  util.update_ui(comps, comps_config)
end

function SkillTech:New()
	local o ={}
	setmetatable(o, self)
	self.__index = self
	return o
end

function SkillTech:ReadFrom(msg)
  -- TODO
end

--[[
@Section: Request and Handle
]]
function this.request_9065(level)
  level = level or 0
	local msg = CNetMessage.New()
	msg.MessageID = Message.GET_Officer_Skill_Tech
 	msg.SessionID = 1
  -- msg:AddInt(level)
 	CurrentLogicSendMessage(msg)
end

function this.handle_9065(msg)
	if msg.MessageStatus ~= 0 then return end
	if this.is_show_ui == false then return end
  
  this.data = ReceivedData:New()
  this.data:ReadFrom(msg)
  this.data:UpdateToUI()
  
  UIManager.NewOpenUI(UINewNames.UIOfficerSkillTech)
end

--[[
@Section: UI Event Handlers
]]
function this.on_close()
	UIManager.NewHideUI(UINewNames.UIOfficerSkillTech)
end

--[[
@Section: Utilities
]]
function this.initialize_data()
	this.is_show_ui = false
end

function this.bind_components(panel)
  util.bind_to(comps, panel, comps_config)
end

function this.initialize_comps()
	this.is_show_ui = true
  util.init_ui(comps, comps_config)
end

util.copy(comps_config, {
  box_state = {
    comp_type = util.CT_CTRL,
    cb_init = function(comp)
      comp:SetSelectedIndex(0)
    end
  },
})
