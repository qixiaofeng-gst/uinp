"""
Done:
- Split code into seperated modules.
- Database thread.
- Show detail information.
- Nice time stamp.
- Auto adjust the image size.
- Select list item to show the specified one.
- Manage the real list.
- Show received data.
- Click list item.
- Image refreshing.
- Threads communication.
"""
import tkinter as _tkinter
import math as _math

_CANVAS_WIDTH = 400
_CANVAS_HEIGHT = 300


class VisualizerPanel(_tkinter.Frame):
    def __init__(self, master=None):
        super().__init__(master)
        self.__master = master
        self.__current_image = None
        self.__current_selection = None
        self.__histories = []
        self.pack()
        self.__create_widgets()
        self.__master.title('Visualizer')

    def __create_widgets(self):
        self.__master.protocol('WM_DELETE_WINDOW', self.__quit)
        self.__create_image()
        self.__create_buttons()

    def __create_image(self):
        self.__canvas = _tkinter.Canvas(
            self, width=_CANVAS_WIDTH,
            height=_CANVAS_HEIGHT,
        )
        self.__canvas.pack(side=_tkinter.LEFT, expand=1)
        _draw(self.__canvas)

    def __create_buttons(self):
        quit_button = _tkinter.Button(
            self, text='Quit', fg='black',
            command=self.__quit,
        )
        quit_button.pack(side=_tkinter.BOTTOM)

    def __quit(self):
        self.__is_listening = False
        self.__master.destroy()


_samples = [
    -0.997925, -0.997925, -0.884521, -0.039062, 0.164795, 0.213013, 0.224854, 0.228394, 0.229858, 0.230591, 0.230957,
    0.229126, 0.230713, 0.231323, 0.229248, 0.226562, 0.220703, 0.216309, 0.213135, 0.210571, 0.204956, 0.200928,
    0.196655, 0.191528, 0.189209, 0.186768, 0.187134, 0.183594, 0.182739, 0.182617, 0.182129, 0.184326, 0.182495,
    0.180420, 0.180054, 0.176758, 0.178955, 0.178955, 0.179321, 0.177368, 0.181396, 0.182495, 0.185669, 0.186890,
    0.188110, 0.192017, 0.194092, 0.197632, 0.201050, 0.202881, 0.204712, 0.206665, 0.206543, 0.208862, 0.208008,
    0.206055, 0.203735, 0.200684, 0.198853, 0.196655, 0.194336, 0.192383, 0.186523, 0.181274, 0.178345, 0.175781,
    0.171997, 0.168945, 0.162964, 0.159912, 0.157227, 0.154175, 0.151855, 0.151489, 0.149536, 0.151733, 0.151733,
    0.154785, 0.154785, 0.156006, 0.156372, 0.155884, 0.157715, 0.156494, 0.158203, 0.158325, 0.156738, 0.155884,
    0.155640, 0.155029, 0.153564, 0.151001, 0.151367, 0.150391, 0.148926, 0.149658, 0.148926, 0.146729, 0.144653,
    0.141724, 0.140015, 0.139893, 0.138916, 0.138916, 0.137817, 0.138550, 0.138550, 0.139526, 0.139648, 0.139160,
    0.141602, 0.145630, 0.147217, 0.148804, 0.150146, 0.150513, 0.151367, 0.152710, 0.154541, 0.152954, 0.150513,
    0.145508, 0.142578, 0.138672, 0.135986, 0.131958, 0.130005, 0.129272, 0.125000, 0.123535, 0.119995, 0.118286,
    0.116089, 0.113770, 0.111572, 0.112305, 0.109497, 0.110474, 0.110718, 0.109863, 0.111328, 0.110718, 0.112915,
    0.116089, 0.116821, 0.119385, 0.120972, 0.123169, 0.126953, 0.127319, 0.130371, 0.131714, 0.131470, 0.132935,
    0.132446, 0.132202, 0.130615, 0.128540, 0.127808, 0.124023, 0.122925, 0.121704, 0.122559, 0.118042, 0.117676,
    0.113647, 0.110840, 0.109985, 0.105835, 0.102783, 0.101074, 0.099243, 0.097534, 0.097290, 0.096680, 0.096191,
    0.095337, 0.096436, 0.095093, 0.098389, 0.097656, 0.099731, 0.100220, 0.104004, 0.104126, 0.102417, 0.102783,
    0.101685, 0.104248, 0.102661, 0.103394, 0.099365, 0.097168, 0.094604, 0.094116, 0.090942, 0.087891, 0.084351,
    0.082520, 0.082031, 0.081177, 0.080688, 0.077148, 0.077148, 0.073608, 0.071777, 0.071899, 0.071533, 0.071167,
    0.071167, 0.068970, 0.070068, 0.070068, 0.069458, 0.069824, 0.068481, 0.069214, 0.071045, 0.072510, 0.072388,
    0.074829, 0.073608, 0.072021, 0.072388, 0.073120, 0.069946, 0.067993, 0.065308, 0.063354, 0.063599, 0.060913,
    0.060059, 0.056519, 0.052856, 0.051147, 0.048828, 0.049194, 0.046387, 0.045532, 0.044189, 0.044312, 0.044434,
    0.045898, 0.045044, 0.044189, 0.044922, 0.045654, 0.048462, 0.052368, 0.055054, 0.055664, 0.057129, 0.060669,
    0.060547, 0.062866, 0.063232, 0.064941, 0.063965, 0.064575, 0.065186, 0.064697, 0.065796, 0.065796, 0.064941,
    0.066040, 0.066040, 0.064453, 0.063599, 0.064331, 0.062256, 0.061279, 0.059326, 0.057495, 0.055542, 0.054932,
    0.052246, 0.050537, 0.049072, 0.049561, 0.048340, 0.047729, 0.049072, 0.049438, 0.051270, 0.049438, 0.049438,
    0.050903, 0.052368, 0.052368, 0.053955, 0.053589, 0.053467, 0.055542, 0.053711, 0.054443, 0.050537, 0.047363,
    0.045654, 0.044434, 0.044556, 0.041626, 0.041504, 0.038330, 0.037476, 0.036987, 0.036133, 0.035278, 0.036377,
    0.035522, 0.035645, 0.035645, 0.036743, 0.036499, 0.035645, 0.033325, 0.037842, 0.039307, 0.040527, 0.042603,
    0.041504,
]
_real_part = [
    33.244995, -2.440308, -2.778954, -4.230044, -3.857554, -3.268735, -2.572284, -3.720429, -3.853550,
    -4.546385, -3.402665, -3.377321, -3.537035, -3.566006, -3.513604, -3.582915, -3.442218, -3.308911,
    -3.349596, -3.051212, -3.068025, -3.066454, -3.003319, -2.920645, -2.834324, -2.776050, -2.773353,
    -2.658601, -2.625542, -2.512104, -2.444340, -2.410353, -2.284868, -2.202739, -2.194568, -2.082102,
    -2.043954, -1.923855, -1.892768, -1.839904, -1.723693, -1.676049, -1.607173, -1.521033, -1.477859,
    -1.405273, -1.317904, -1.270339, -1.204501, -1.116930, -1.092490, -1.018230, -1.003864, -0.916218,
    -0.845902, -0.884869, -0.814741, -0.724291, -0.691693, -0.628181, -0.585498, -0.535545, -0.504146,
    -0.451248, -0.440014, -0.410637, -0.374571, -0.339324, -0.296603, -0.258066, -0.247651, -0.214150,
    -0.204712, -0.179434, -0.169438, -0.135291, -0.123155, -0.104401, -0.098085, -0.091682, -0.078979,
    -0.078565, -0.078862, -0.048323, -0.045627, -0.045821, -0.037323, -0.031508, -0.054953, -0.046538,
    -0.046956, -0.055362, -0.068651, -0.055782, -0.058110, -0.076989, -0.083602, -0.093863, -0.092371,
    -0.099146, -0.112942, -0.120518, -0.141580, -0.135546, -0.149002, -0.167565, -0.189498, -0.201658,
    -0.241977, -0.227737, -0.251902, -0.265913, -0.275639, -0.288043, -0.304317, -0.312858, -0.345135,
    -0.368324, -0.386019, -0.379913, -0.409607, -0.390002, -0.439005, -0.440013, -0.455741, -0.480849,
    -0.487573, -0.518330, -0.529408, -0.549745, -0.559868, -0.578563, -0.575460, -0.594912, -0.598761,
    -0.631115, -0.615534, -0.644353, -0.662865, -0.694606, -0.685683, -0.697777, -0.718789, -0.731608,
    -0.724370, -0.727374, -0.746946, -0.756455, -0.750453, -0.768588, -0.754909, -0.788818, -0.769325,
    -0.788606, -0.791562, -0.808431, -0.801878, -0.807760, -0.805627, -0.803826, -0.798950,
]
_image_part = [
    0.000000, -9.939421, -4.341887, -2.470866, -2.070615, -1.363174, -1.434606, -1.351047, -0.754103, -1.348053,
    0.440477, 0.063935, 0.138558, 0.401580, 0.546644, 0.813310, 0.834343, 0.867073, 1.004031, 1.098535, 1.105661,
    1.199810, 1.219970, 1.339178, 1.399228, 1.451403, 1.522285, 1.600556, 1.614964, 1.706796, 1.709011, 1.722872,
    1.758918, 1.823889, 1.817718, 1.858569, 1.918419, 1.926961, 1.914544, 1.941801, 1.947423, 1.942154, 1.962018,
    1.931502, 1.921502, 1.945915, 1.922281, 1.925900, 1.887404, 1.869033, 1.862410, 1.865337, 1.835714, 1.790432,
    1.763328, 1.750188, 1.703330, 1.713577, 1.670081, 1.660021, 1.604704, 1.575326, 1.568281, 1.502342, 1.485458,
    1.438007, 1.402820, 1.377893, 1.329856, 1.295926, 1.246721, 1.223459, 1.185797, 1.128448, 1.091097, 1.067340,
    1.020605, 0.998384, 0.969322, 0.898544, 0.884033, 0.840884, 0.821141, 0.774658, 0.728162, 0.707789, 0.667225,
    0.634541, 0.596712, 0.562599, 0.525078, 0.498931, 0.466551, 0.433605, 0.411896, 0.381360, 0.336196, 0.323449,
    0.276287, 0.273432, 0.250343, 0.218821, 0.167638, 0.167736, 0.145110, 0.118527, 0.095805, 0.079888, 0.055916,
    0.037413, 0.026650, -0.001901, -0.014086, -0.016710, -0.045293, -0.073544, -0.056409, -0.080572, -0.074162,
    -0.093939, -0.099208, -0.119353, -0.137682, -0.120736, -0.128301, -0.139458, -0.153879, -0.130319, -0.150470,
    -0.166698, -0.148545, -0.155928, -0.144278, -0.165529, -0.161130, -0.169616, -0.157067, -0.163648, -0.147268,
    -0.142821, -0.142255, -0.115304, -0.123679, -0.122313, -0.125210, -0.134204, -0.100671, -0.123485, -0.069070,
    -0.081916, -0.088118, -0.056163, -0.073234, -0.057023, -0.059110, -0.040303, -0.020358, -0.010521, -0.013901,
    -0.017792, 0.000000,
]


def _draw(canvas: _tkinter.Canvas):
    half_height = _CANVAS_HEIGHT // 2
    canvas.create_line(0, half_height, _CANVAS_WIDTH, half_height)
    n = 320
    n_1 = n - 1
    last_x = 0
    last_y = 0
    for i in range(n):
        y = _CANVAS_HEIGHT - _math.sqrt((1 - _math.cos(_math.pi * 2 * (i / n_1))) * 0.5) * _CANVAS_HEIGHT
        canvas.create_line(last_x, last_y, i, y, fill='#080')
        last_x = i
        last_y = y

    for i in range(len(_samples) - 1):
        x1 = i
        x2 = i + 1
        y1 = half_height - _samples[x1] * half_height
        y2 = half_height - _samples[x2] * half_height
        canvas.create_line(x1, y1, x2, y2, fill='#800')

    for i in range(len(_real_part) - 1):
        x1 = i
        x2 = i + 1
        y1 = half_height - _real_part[x1] * 10
        y2 = half_height - _real_part[x2] * 10
        canvas.create_line(x1, y1, x2, y2, fill='#880')

    for i in range(len(_image_part) - 1):
        x1 = i
        x2 = i + 1
        y1 = half_height - _image_part[x1] * 10
        y2 = half_height - _image_part[x2] * 10
        canvas.create_line(x1, y1, x2, y2, fill='#808')


def __main():
    gui = VisualizerPanel(_tkinter.Tk())
    gui.mainloop()


if __name__ == '__main__':
    __main()
