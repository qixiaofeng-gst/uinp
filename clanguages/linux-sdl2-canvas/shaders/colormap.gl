const vec3 _samples[] = vec3[](
    vec3(0.1, 0.1, 0.9),
    vec3(0.1, 0.9, 0.9),
    vec3(0.1, 0.9, 0.1),
    vec3(0.9, 0.9, 0.1),
    vec3(0.9, 0.1, 0.1),
    vec3(0.9, 0.1, 0.9)
);

const float _step = 1.0 / (_samples.length() - 1.0);

/** Return a color according to given number in the range [0, 1]. */
vec3 get_color(float number) {
    float adjusted = clamp(number, 0.0, 1.0) * 0.99;
    float rest = mod(adjusted, _step);
    int start_index = int(floor((adjusted - rest) / _step));
    return mix(_samples[start_index], _samples[start_index + 1], (rest / _step));
}
